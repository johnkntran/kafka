version: '3.8'

services:

  broker:
    image: apache/kafka:4.0.0
    container_name: broker
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://broker:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      KAFKA_BROKER_ID: 1

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka
    ports:
      - 9092:9092
      - 9093:9093

  kafka-ui:
    image: kafbat/kafka-ui:main
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9093
    depends_on:
      - broker
    networks:
      - kafka

  producer:
    build: .
    container_name: producer
    depends_on:
      - broker
    environment:
      KAFKA_BROKER_URL: broker:9093
      KAFKA_TOPIC: test_topic
    volumes:
      - .:/app
    working_dir: /app
    command: python producer.py
    networks:
      - kafka

  consumer:
    build: .
    container_name: consumer
    depends_on:
      - broker
      - producer
    environment:
      KAFKA_BROKER_URL: broker:9093
      KAFKA_TOPIC: test_topic
    volumes:
      - .:/app
    working_dir: /app
    command: python consumer.py
    networks:
      - kafka

networks:
  kafka:
